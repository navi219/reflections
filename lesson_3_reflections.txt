When would you want to use a remote repository rather than keeping all your work local?

	Collaborating with others or working from multiple workstations. Also provides effective offsite backup.


Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

	If others are updating the repository as well, you don't want your local work overwritten, or even just changing unpredictably.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

	A branch is a split of commit streams within a repository. Clones are simply copies of repositories, regardless of where they are hosted. Forks are a kind of clone specifically between two repositories on GitHub.

	A branch is used for development of code within a single repository -- either for individual experimentation or collaboration on independent components within the code. Forks are useful for re-purposing some existing code to take it in a new direction, or to focus on extensive development of features which are not expected to merge back into the original. Cloning is generally useful for copying repositories from GitHub locally, or working from multiple machines.

What is the benefit of having a copy of the last known state of the remote stored locally?

	It allows offline work. It's also a de facto staging area before updating a shared repository.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

	You could try tracking changes in a manual ledger, but this is tedious and highly prone to error. It really depends on the kind of work -- for code, Git / GitHub is a logical collaboration solution. Other tools are available as well.